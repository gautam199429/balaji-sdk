/*
 * e-KYC API
 * e-KYC API , GST verification suite
 *
 * The version of the OpenAPI document: v1
 * Contact: gautam@balajimariline.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * RateRequest
 */
@JsonPropertyOrder({
  RateRequest.JSON_PROPERTY_COST,
  RateRequest.JSON_PROPERTY_SERVICE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-02T01:38:15.284014500+05:30[Asia/Calcutta]")
public class RateRequest {
  public static final String JSON_PROPERTY_COST = "cost";
  private Double cost;

  /**
   * Gets or Sets service
   */
  public enum ServiceEnum {
    PAN_NUMBER("PAN_NUMBER"),
    
    GSTIN_INFO("GSTIN_INFO"),
    
    GSTIN_STATUS("GSTIN_STATUS"),
    
    GSTIN_TRACK("GSTIN_TRACK"),
    
    GSTIN_PREF("GSTIN_PREF"),
    
    BANK("BANK"),
    
    MCA_MASTER_DATA("MCA_MASTER_DATA"),
    
    MCA_SIGNATORY("MCA_SIGNATORY"),
    
    MCA_IEC("MCA_IEC"),
    
    MCA_ADDRESS("MCA_ADDRESS"),
    
    REGISTRATION("REGISTRATION"),
    
    WALLET_LOAD("WALLET_LOAD"),
    
    ELECTRICITY_BILL("ELECTRICITY_BILL"),
    
    AADHAR_NUMBER("AADHAR_NUMBER");

    private String value;

    ServiceEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ServiceEnum fromValue(String value) {
      for (ServiceEnum b : ServiceEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_SERVICE = "service";
  private ServiceEnum service;

  public RateRequest() {
  }

  public RateRequest cost(Double cost) {
    
    this.cost = cost;
    return this;
  }

   /**
   * Get cost
   * @return cost
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getCost() {
    return cost;
  }


  @JsonProperty(JSON_PROPERTY_COST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCost(Double cost) {
    this.cost = cost;
  }


  public RateRequest service(ServiceEnum service) {
    
    this.service = service;
    return this;
  }

   /**
   * Get service
   * @return service
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SERVICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ServiceEnum getService() {
    return service;
  }


  @JsonProperty(JSON_PROPERTY_SERVICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setService(ServiceEnum service) {
    this.service = service;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RateRequest rateRequest = (RateRequest) o;
    return Objects.equals(this.cost, rateRequest.cost) &&
        Objects.equals(this.service, rateRequest.service);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cost, service);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RateRequest {\n");
    sb.append("    cost: ").append(toIndentedString(cost)).append("\n");
    sb.append("    service: ").append(toIndentedString(service)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

