/*
 * e-KYC API
 * e-KYC API , GST verification suite
 *
 * The version of the OpenAPI document: v1
 * Contact: gautam@balajimariline.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * NSDLRequestBody
 */
@JsonPropertyOrder({
  NSDLRequestBody.JSON_PROPERTY_DATA,
  NSDLRequestBody.JSON_PROPERTY_VERSION,
  NSDLRequestBody.JSON_PROPERTY_SYMMETRIC_KEY,
  NSDLRequestBody.JSON_PROPERTY_HASH,
  NSDLRequestBody.JSON_PROPERTY_TIMESTAMP,
  NSDLRequestBody.JSON_PROPERTY_REQUEST_ID
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-02T01:38:15.284014500+05:30[Asia/Calcutta]")
public class NSDLRequestBody {
  public static final String JSON_PROPERTY_DATA = "data";
  private String data;

  public static final String JSON_PROPERTY_VERSION = "version";
  private String version;

  public static final String JSON_PROPERTY_SYMMETRIC_KEY = "symmetricKey";
  private String symmetricKey;

  public static final String JSON_PROPERTY_HASH = "hash";
  private String hash;

  public static final String JSON_PROPERTY_TIMESTAMP = "timestamp";
  private String timestamp;

  public static final String JSON_PROPERTY_REQUEST_ID = "requestId";
  private String requestId;

  public NSDLRequestBody() {
  }

  public NSDLRequestBody data(String data) {
    
    this.data = data;
    return this;
  }

   /**
   * Get data
   * @return data
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DATA)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getData() {
    return data;
  }


  @JsonProperty(JSON_PROPERTY_DATA)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setData(String data) {
    this.data = data;
  }


  public NSDLRequestBody version(String version) {
    
    this.version = version;
    return this;
  }

   /**
   * Get version
   * @return version
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getVersion() {
    return version;
  }


  @JsonProperty(JSON_PROPERTY_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVersion(String version) {
    this.version = version;
  }


  public NSDLRequestBody symmetricKey(String symmetricKey) {
    
    this.symmetricKey = symmetricKey;
    return this;
  }

   /**
   * Get symmetricKey
   * @return symmetricKey
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SYMMETRIC_KEY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getSymmetricKey() {
    return symmetricKey;
  }


  @JsonProperty(JSON_PROPERTY_SYMMETRIC_KEY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSymmetricKey(String symmetricKey) {
    this.symmetricKey = symmetricKey;
  }


  public NSDLRequestBody hash(String hash) {
    
    this.hash = hash;
    return this;
  }

   /**
   * Get hash
   * @return hash
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_HASH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getHash() {
    return hash;
  }


  @JsonProperty(JSON_PROPERTY_HASH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setHash(String hash) {
    this.hash = hash;
  }


  public NSDLRequestBody timestamp(String timestamp) {
    
    this.timestamp = timestamp;
    return this;
  }

   /**
   * Get timestamp
   * @return timestamp
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTimestamp() {
    return timestamp;
  }


  @JsonProperty(JSON_PROPERTY_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTimestamp(String timestamp) {
    this.timestamp = timestamp;
  }


  public NSDLRequestBody requestId(String requestId) {
    
    this.requestId = requestId;
    return this;
  }

   /**
   * Get requestId
   * @return requestId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REQUEST_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRequestId() {
    return requestId;
  }


  @JsonProperty(JSON_PROPERTY_REQUEST_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRequestId(String requestId) {
    this.requestId = requestId;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NSDLRequestBody nsDLRequestBody = (NSDLRequestBody) o;
    return Objects.equals(this.data, nsDLRequestBody.data) &&
        Objects.equals(this.version, nsDLRequestBody.version) &&
        Objects.equals(this.symmetricKey, nsDLRequestBody.symmetricKey) &&
        Objects.equals(this.hash, nsDLRequestBody.hash) &&
        Objects.equals(this.timestamp, nsDLRequestBody.timestamp) &&
        Objects.equals(this.requestId, nsDLRequestBody.requestId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(data, version, symmetricKey, hash, timestamp, requestId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NSDLRequestBody {\n");
    sb.append("    data: ").append(toIndentedString(data)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    symmetricKey: ").append(toIndentedString(symmetricKey)).append("\n");
    sb.append("    hash: ").append(toIndentedString(hash)).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("    requestId: ").append(toIndentedString(requestId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

