/*
 * e-KYC API
 * e-KYC API , GST verification suite
 *
 * The version of the OpenAPI document: v1
 * Contact: gautam@balajimariline.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * PasswordChangeRequest
 */
@JsonPropertyOrder({
  PasswordChangeRequest.JSON_PROPERTY_COMPANY_ID,
  PasswordChangeRequest.JSON_PROPERTY_OTP,
  PasswordChangeRequest.JSON_PROPERTY_NEW_PASSWORD
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-02T01:38:15.284014500+05:30[Asia/Calcutta]")
public class PasswordChangeRequest {
  public static final String JSON_PROPERTY_COMPANY_ID = "companyId";
  private String companyId;

  public static final String JSON_PROPERTY_OTP = "otp";
  private String otp;

  public static final String JSON_PROPERTY_NEW_PASSWORD = "newPassword";
  private String newPassword;

  public PasswordChangeRequest() {
  }

  public PasswordChangeRequest companyId(String companyId) {
    
    this.companyId = companyId;
    return this;
  }

   /**
   * Get companyId
   * @return companyId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_COMPANY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCompanyId() {
    return companyId;
  }


  @JsonProperty(JSON_PROPERTY_COMPANY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCompanyId(String companyId) {
    this.companyId = companyId;
  }


  public PasswordChangeRequest otp(String otp) {
    
    this.otp = otp;
    return this;
  }

   /**
   * Get otp
   * @return otp
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_OTP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getOtp() {
    return otp;
  }


  @JsonProperty(JSON_PROPERTY_OTP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setOtp(String otp) {
    this.otp = otp;
  }


  public PasswordChangeRequest newPassword(String newPassword) {
    
    this.newPassword = newPassword;
    return this;
  }

   /**
   * Get newPassword
   * @return newPassword
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NEW_PASSWORD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNewPassword() {
    return newPassword;
  }


  @JsonProperty(JSON_PROPERTY_NEW_PASSWORD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNewPassword(String newPassword) {
    this.newPassword = newPassword;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PasswordChangeRequest passwordChangeRequest = (PasswordChangeRequest) o;
    return Objects.equals(this.companyId, passwordChangeRequest.companyId) &&
        Objects.equals(this.otp, passwordChangeRequest.otp) &&
        Objects.equals(this.newPassword, passwordChangeRequest.newPassword);
  }

  @Override
  public int hashCode() {
    return Objects.hash(companyId, otp, newPassword);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PasswordChangeRequest {\n");
    sb.append("    companyId: ").append(toIndentedString(companyId)).append("\n");
    sb.append("    otp: ").append(toIndentedString(otp)).append("\n");
    sb.append("    newPassword: ").append(toIndentedString(newPassword)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

