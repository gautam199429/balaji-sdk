/*
 * e-KYC API
 * e-KYC API , GST verification suite
 *
 * The version of the OpenAPI document: v1
 * Contact: gautam@balajimariline.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * BlockRequestBody
 */
@JsonPropertyOrder({
  BlockRequestBody.JSON_PROPERTY_COMPANY_ID,
  BlockRequestBody.JSON_PROPERTY_BLOCK_REMARK,
  BlockRequestBody.JSON_PROPERTY_ENUMS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-02T01:38:15.284014500+05:30[Asia/Calcutta]")
public class BlockRequestBody {
  public static final String JSON_PROPERTY_COMPANY_ID = "companyId";
  private String companyId;

  public static final String JSON_PROPERTY_BLOCK_REMARK = "blockRemark";
  private String blockRemark;

  /**
   * Gets or Sets enums
   */
  public enum EnumsEnum {
    TRUE("TRUE"),
    
    FALSE("FALSE"),
    
    BLOCKED("BLOCKED");

    private String value;

    EnumsEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static EnumsEnum fromValue(String value) {
      for (EnumsEnum b : EnumsEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_ENUMS = "enums";
  private EnumsEnum enums;

  public BlockRequestBody() {
  }

  public BlockRequestBody companyId(String companyId) {
    
    this.companyId = companyId;
    return this;
  }

   /**
   * Get companyId
   * @return companyId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_COMPANY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCompanyId() {
    return companyId;
  }


  @JsonProperty(JSON_PROPERTY_COMPANY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCompanyId(String companyId) {
    this.companyId = companyId;
  }


  public BlockRequestBody blockRemark(String blockRemark) {
    
    this.blockRemark = blockRemark;
    return this;
  }

   /**
   * Get blockRemark
   * @return blockRemark
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_BLOCK_REMARK)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getBlockRemark() {
    return blockRemark;
  }


  @JsonProperty(JSON_PROPERTY_BLOCK_REMARK)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBlockRemark(String blockRemark) {
    this.blockRemark = blockRemark;
  }


  public BlockRequestBody enums(EnumsEnum enums) {
    
    this.enums = enums;
    return this;
  }

   /**
   * Get enums
   * @return enums
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENUMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public EnumsEnum getEnums() {
    return enums;
  }


  @JsonProperty(JSON_PROPERTY_ENUMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnums(EnumsEnum enums) {
    this.enums = enums;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BlockRequestBody blockRequestBody = (BlockRequestBody) o;
    return Objects.equals(this.companyId, blockRequestBody.companyId) &&
        Objects.equals(this.blockRemark, blockRequestBody.blockRemark) &&
        Objects.equals(this.enums, blockRequestBody.enums);
  }

  @Override
  public int hashCode() {
    return Objects.hash(companyId, blockRemark, enums);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BlockRequestBody {\n");
    sb.append("    companyId: ").append(toIndentedString(companyId)).append("\n");
    sb.append("    blockRemark: ").append(toIndentedString(blockRemark)).append("\n");
    sb.append("    enums: ").append(toIndentedString(enums)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

